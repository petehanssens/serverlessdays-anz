{
    "layout": "speaker.njk",
    "page": {
        "title": "ServerlessDays ANZ - Aaron Powell",
        "description": "TypeScript, and by extensions JavaScript, has been supported in Azure Functions since version 1, but the programming model never felt 'right' as a JavaScript dev. It didn't follow established patterns, such as how to use packages, Function registration/discovery, or just looked radically different to web server frameworks. /n/n/n The team decided to tackle this in the v4 release, and I joined as an advisor to them. Over the course of several months, we stubbed out different prototypes and gained feedback on what would be a programming model that would be best suited to the needs of developers building serverless applications today. /n/n/n Let's take a look behind the scenes of how it all came together, and what we've got today to make it easier to build serverless applications with Azure Functions.",
        "url": "https://serverlessdays.io/speakers/aaron",
        "image": "https://sessionize.com/image/3528-400o400o2-7yZEraxd3eC1BkUuiJDvF6.png"
    },
    "speaker": {
        "name": "Aaron Powell",
        "title": "I like long walks on the beach talking about JavaScript",
        "img": "https://sessionize.com/image/3528-400o400o2-7yZEraxd3eC1BkUuiJDvF6.png",
        "bio": "Aaron is a Developer Advocate at Microsoft. Having spent 15 years doing web development he's seen it all, from browser wars, the rise of AJAX and the fall of 20 JavaScript frameworks (and that was just yesterday!). Always tinkering with something new he explores crazy ideas like writing your own implementation of numbers in .NET, creating IoC in JavaScript or implementing tic-tac-toe using git commits.",
        "talk": {
            "title": "Rebuilding the Azure Functions programming model",
            "abstract" : "TypeScript, and by extensions JavaScript, has been supported in Azure Functions since version 1, but the programming model never felt 'right' as a JavaScript dev. It didn't follow established patterns, such as how to use packages, Function registration/discovery, or just looked radically different to web server frameworks. /n/n/n The team decided to tackle this in the v4 release, and I joined as an advisor to them. Over the course of several months, we stubbed out different prototypes and gained feedback on what would be a programming model that would be best suited to the needs of developers building serverless applications today. /n/n/n Let's take a look behind the scenes of how it all came together, and what we've got today to make it easier to build serverless applications with Azure Functions."
        },
        "social": [
            {
                "name": "Twitter",
                "link": "https://twitter.com/slsdaysanz",
                "icon": "https://res.cloudinary.com/serverlessdays/image/upload/v1560336697/Twitter.svg"
            },
            {
                "name": "LinkedIn",
                "link": "https://www.linkedin.com/in/company/serverlessdays-anz/",
                "icon": "https://res.cloudinary.com/serverlessdays/image/upload/c_scale,h_80/v1560755840/linkedin_white.png"
            }
        ],
        "links": [
            {
                "text": "",
                "link": ""
            }
        ]
    }
}