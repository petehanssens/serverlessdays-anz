{
    "layout": "speaker.njk",
    "page": {
        "title": "ServerlessDays ANZ - Eric Johnson",
        "description": "Idempotency, idempotent, idempotence? No matter how you say it, it is a hard concept for developers to wrap their head around. However, every developer and data engineer understands the battle to prevent or remediate duplicate items in their data sets. In this session, you will learn what idempotency means and how you can apply this to the design of event driven architectures. Learn how AWS implements idempotent patterns in services like Amazon Simple Queue Service or AWS Step Functions to reduce data duplication. Learn best practices for idempotency at a code level and libraries that make it easier to implement. At the end of the session, you will have a good understanding of how to build applications with idempotency in mind and save yourself the headache of deduping data after the fact.",
        "url": "https://serverlessdays.io/speakers/eric",
        "image": "https://sessionize.com/image/cfb8-400o400o2-4YHj3JTFXpjLdF12TkrA2d.png"
    },
    "speaker": {
        "name": "Eric Johnson",
        "title": "Principal Developer Advocate - Serverless, AWS        ",
        "img": "https://sessionize.com/image/cfb8-400o400o2-4YHj3JTFXpjLdF12TkrA2d.png",
        "bio": "Eric Johnson is a Principal Developer Advocate for Serverless Applications at Amazon Web Services and is based in Northern Colorado. Eric is a fanatic about serverless and enjoys helping developers understand how serverless technologies introduce a major paradigm shift in how they approach building and running applications at massive scale with minimal administration overhead.        ",
        "talk": {
            "title": "Maintaining idempotency in distributed serverless applications            ",
            "abstract" : "Idempotency, idempotent, idempotence? No matter how you say it, it is a hard concept for developers to wrap their head around. However, every developer and data engineer understands the battle to prevent or remediate duplicate items in their data sets.\n\nIn this session, you will learn what idempotency means and how you can apply this to the design of event driven architectures. Learn how AWS implements idempotent patterns in services like Amazon Simple Queue Service or AWS Step Functions to reduce data duplication. Learn best practices for idempotency at a code level and libraries that make it easier to implement.\n\nAt the end of the session, you will have a good understanding of how to build applications with idempotency in mind and save yourself the headache of deduping data after the fact."
        },
        "social": [
            {
                "name": "Twitter",
                "link": "https://twitter.com/edjgeek",
                "icon": "https://res.cloudinary.com/serverlessdays/image/upload/v1560336697/Twitter.svg"
            },
            {
                "name": "LinkedIn",
                "link": "https://www.linkedin.com/in/singledigit/",
                "icon": "https://res.cloudinary.com/serverlessdays/image/upload/c_scale,h_80/v1560755840/linkedin_white.png"
            }
        ],
        "links": [
            {
                "text": "",
                "link": ""
            }
        ]
    }
}